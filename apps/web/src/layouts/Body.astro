---
import type { Router } from 'src/capabilities/router';
import type { Time } from 'src/capabilities/time';
import * as core from 'src/core';
import NavLink from 'src/components/NavLink.astro';
import PageSearch from 'src/components/PageSearch.astro';

interface Props {
  time: Time;
  router: Router;
  localization: core.types.Localization;
}

const main = () => {
  const { time, router, localization } = Astro.props;

  return {
    time, 
    router,
    localization,
    path: Astro.url.pathname,
  }
}

const {
  time,
  path, 
  router,
  localization
} = main();
---
<body class="flex flex-col min-h-screen max-w-5xl w-11/12 m-auto text-gray-600">
  <header class="header z-50 sticky top-0 text-xs text-gray-400 sm:h-24 h-16 flex flex-wrap items-center justify-between w-full bg-white">
    <ul class="flex justify-items-start items-center">
      <li class="md:mr-14 mr-6 text-sm">
        <a class="main font-semibold text-gray-700" href={core.path.fromPathByLocale('/')(router.locale)}>
          Eriko Ikeda Kay
        </a>
      </li>
      <li class="md:mr-14 mr-6">
        <NavLink href={core.path.fromPathByLocale('/translations')(router.locale)}>
          Translations
        </NavLink>
      </li>
      <li class="md:mr-14 mr-6">
        <NavLink href={core.path.fromPathByLocale('/tags')(router.locale)}>
          Tags
        </NavLink>
      </li>
    </ul>
    <ul class="flex items-center">
      <li>
        <PageSearch />
      </li>
    </ul>
  </header>
  <div class="flex flex-col flex-grow sm:mt-16 sm:mb-12 my-6"  data-pagefind-body>
    <slot />
  </div>
  <footer class="text-xs text-gray-400 h-16 col-span-full	grid grid-cols-8 grid-rows-2">
    <div class="grid items-center col-span-5 row-span-2">
      <span>
        Copyright Â© {time.now().getFullYear()} | All rights reserved.
      </span>
    </div>
    <div class="grid items-center justify-items-end row-span-2 col-span-3 col-end-9">
      <span>
        Have a nice day
      </span>
    </div>
  </footer>
</body>

<style>
  .header {
    & .main {
      font-family: 'Karla-SemiBold';
      letter-spacing: -0.04em;
    }
  }
</style>
<script>
  const setupLocaleSelect = (context: { window: Window }) => {
    const select = context.window.document.querySelector('#locale-selector')
    const handler = (event: Event) => {
      if (event.target instanceof HTMLSelectElement) {
        context.window.location.href = event.target.value
      }
    }
    select?.addEventListener('change', handler);
    return () => {
      select?.removeEventListener('change', handler)
    }
  }

  const main = (context: { window: Window }) => {
    return [
      setupLocaleSelect(context)
    ].reduce(
      (acc, cb) => () => {
        acc();
        cb();
      },
      () => null
    )
  }
  main({ window });
</script>
