---
import * as core from 'src/core';
import type { Router } from 'src/capabilities/router';
import ListContent from 'src/layouts/ListContent.astro';
import Title from 'src/components/Title.astro';
import TranslationPreview from 'src/components/TranslationBlockPreview.astro';

interface Props {
  router: Router;
  tag: core.types.Tag;
  translations: ReadonlyArray<core.types.Translation>
}

const main = () => {
  const { router, tag, translations } = Astro.props;
  return {
    router,
    tag,
    translations
  }
}

const {
  router,
  tag,
  translations
} = main()
---
<main>
  <div class="flex items-center text-base mb-6 text-gray-400 text-secondary fill-secondary w-full">
    <a class="text-link inline-flex items-center" href={core.path.fromPathByLocale('/')(router.locale)}>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="mr-1 h-4 w-4 rotate-180 inline" aria-hidden="true"><path fill-rule="evenodd" d="M3 10a.75.75 0 01.75-.75h10.638L10.23 5.29a.75.75 0 111.04-1.08l5.5 5.25a.75.75 0 010 1.08l-5.5 5.25a.75.75 0 11-1.04-1.08l4.158-3.96H3.75A.75.75 0 013 10z" clip-rule="evenodd"></path></svg>
      Home
    </a>
  </div>
  <h1 class="text-4xl text-gray-800 sm:mb-12 mb-8">
    {`#${tag.id}`}<span class="ml-1 text-sm font-normal align-top">{translations.length}</span>
  </h1>
  <ul class="w-full">
    {translations.map(translation => (
      <li class="pb-8 mb-10 border-b border-gray-200">
        <TranslationPreview router={router} translation={translation} />
      </li>
    ))}
  </ul>
</main>

